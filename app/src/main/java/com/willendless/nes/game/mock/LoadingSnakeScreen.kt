package com.willendless.nes.game.mock

import com.willendless.nes.emulator.CPU
import com.willendless.nes.framework.Game
import com.willendless.nes.framework.Screen

// This class mainly initializes game assets and CPU.
// Then we will transit to the MainScreen according to game name.
// Only update method is used.
@ExperimentalUnsignedTypes
class LoadingSnakeScreen(game: Game): Screen(game) {
    private val program = ubyteArrayOf(
            0x20u, 0x06u, 0x06u, 0x20u, 0x38u, 0x06u, 0x20u, 0x0du, 0x06u, 0x20u, 0x2au, 0x06u, 0x60u, 0xa9u, 0x02u, 0x85u,
            0x02u, 0xa9u, 0x04u, 0x85u, 0x03u, 0xa9u, 0x11u, 0x85u, 0x10u, 0xa9u, 0x10u, 0x85u, 0x12u, 0xa9u, 0x0fu, 0x85u,
            0x14u, 0xa9u, 0x04u, 0x85u, 0x11u, 0x85u, 0x13u, 0x85u, 0x15u, 0x60u, 0xa5u, 0xfeu, 0x85u, 0x00u, 0xa5u, 0xfeu,
            0x29u, 0x03u, 0x18u, 0x69u, 0x02u, 0x85u, 0x01u, 0x60u, 0x20u, 0x4du, 0x06u, 0x20u, 0x8du, 0x06u, 0x20u, 0xc3u,
            0x06u, 0x20u, 0x19u, 0x07u, 0x20u, 0x20u, 0x07u, 0x20u, 0x2du, 0x07u, 0x4cu, 0x38u, 0x06u, 0xa5u, 0xffu, 0xc9u,
            0x77u, 0xf0u, 0x0du, 0xc9u, 0x64u, 0xf0u, 0x14u, 0xc9u, 0x73u, 0xf0u, 0x1bu, 0xc9u, 0x61u, 0xf0u, 0x22u, 0x60u,
            0xa9u, 0x04u, 0x24u, 0x02u, 0xd0u, 0x26u, 0xa9u, 0x01u, 0x85u, 0x02u, 0x60u, 0xa9u, 0x08u, 0x24u, 0x02u, 0xd0u,
            0x1bu, 0xa9u, 0x02u, 0x85u, 0x02u, 0x60u, 0xa9u, 0x01u, 0x24u, 0x02u, 0xd0u, 0x10u, 0xa9u, 0x04u, 0x85u, 0x02u,
            0x60u, 0xa9u, 0x02u, 0x24u, 0x02u, 0xd0u, 0x05u, 0xa9u, 0x08u, 0x85u, 0x02u, 0x60u, 0x60u, 0x20u, 0x94u, 0x06u,
            0x20u, 0xa8u, 0x06u, 0x60u, 0xa5u, 0x00u, 0xc5u, 0x10u, 0xd0u, 0x0du, 0xa5u, 0x01u, 0xc5u, 0x11u, 0xd0u, 0x07u,
            0xe6u, 0x03u, 0xe6u, 0x03u, 0x20u, 0x2au, 0x06u, 0x60u, 0xa2u, 0x02u, 0xb5u, 0x10u, 0xc5u, 0x10u, 0xd0u, 0x06u,
            0xb5u, 0x11u, 0xc5u, 0x11u, 0xf0u, 0x09u, 0xe8u, 0xe8u, 0xe4u, 0x03u, 0xf0u, 0x06u, 0x4cu, 0xaau, 0x06u, 0x4cu,
            0x35u, 0x07u, 0x60u, 0xa6u, 0x03u, 0xcau, 0x8au, 0xb5u, 0x10u, 0x95u, 0x12u, 0xcau, 0x10u, 0xf9u, 0xa5u, 0x02u,
            0x4au, 0xb0u, 0x09u, 0x4au, 0xb0u, 0x19u, 0x4au, 0xb0u, 0x1fu, 0x4au, 0xb0u, 0x2fu, 0xa5u, 0x10u, 0x38u, 0xe9u,
            0x20u, 0x85u, 0x10u, 0x90u, 0x01u, 0x60u, 0xc6u, 0x11u, 0xa9u, 0x01u, 0xc5u, 0x11u, 0xf0u, 0x28u, 0x60u, 0xe6u,
            0x10u, 0xa9u, 0x1fu, 0x24u, 0x10u, 0xf0u, 0x1fu, 0x60u, 0xa5u, 0x10u, 0x18u, 0x69u, 0x20u, 0x85u, 0x10u, 0xb0u,
            0x01u, 0x60u, 0xe6u, 0x11u, 0xa9u, 0x06u, 0xc5u, 0x11u, 0xf0u, 0x0cu, 0x60u, 0xc6u, 0x10u, 0xa5u, 0x10u, 0x29u,
            0x1fu, 0xc9u, 0x1fu, 0xf0u, 0x01u, 0x60u, 0x4cu, 0x35u, 0x07u, 0xa0u, 0x00u, 0xa5u, 0xfeu, 0x91u, 0x00u, 0x60u,
            0xa6u, 0x03u, 0xa9u, 0x00u, 0x81u, 0x10u, 0xa2u, 0x00u, 0xa9u, 0x01u, 0x81u, 0x10u, 0x60u, 0xa2u, 0x00u, 0xeau,
            0xeau, 0xcau, 0xd0u, 0xfbu, 0x60u)

    override fun update(deltaTime: Float) {
        CPU.load(program)
        CPU.reset()
        game.setScreen(SnakeMainScreen(game))
    }

    override fun present(deltaTime: Float) {
    }

    override fun pause() {
    }

    override fun resume() {
    }

    override fun dispose() {
    }
}